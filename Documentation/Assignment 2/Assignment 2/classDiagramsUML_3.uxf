<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=9
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>220</y>
      <w>200</w>
      <h>290</h>
    </coordinates>
    <panel_attributes>LevelController
--
_-PAUSE_KEY: KeyCode_
-players: ArrayList
-indexCurrLvl: int
-currLvl: Level
-gameStarted: Boolean
-gamePaused: Boolean
-screenController: ScreenController
-gameLoop: AnimationTimer
-mainController: MainController
-input: Input;
-pathMaps: String
--
-findMaps()
-createTimer(): AnimationTimer
+startLevel(gameLoop: AnimationLoop)
+createLvl()
-createInput(): Input
+createPlayer(input: Input)
+nextLevel()
+causesCollision(minX: double, maxX: double, 
 minY: double, maxY: double): Boolean
+gameOver()
+winGame()
...

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>340</y>
      <w>190</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>ScreenController
--
-sprites: ArrayList&lt;SpriteBase&gt;
-images: ArrayList&lt;ImageView&gt;
-playfieldLayer: Pane
--
+ScreenController(layer: Pane)
+addToSprites(list: ArrayList&lt;SpriteBase&gt;)
+addToSprites(sprite: SpriteBase)
+updateUI()
-update(sprite: SpriteBase)
+removeSprite(sprite: SpriteBase)
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>370</x>
      <y>70</y>
      <w>170</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>StartController
{implents Initializable}
--
-helpScreen: GridPane
-root: AnchorPane
-startButton: Button
-exitButton: Button
-helpButton: Button
...
--
+inintialize(location: URL, 
    resources: ResourceBundle)
-startLevel()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>870</x>
      <y>30</y>
      <w>160</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>GameEndController
{implements Initializable}
--
-root: AnchorPane
-restartButton: Button
-quitButton: Button
--
+inintialize(location: URL, 
    resources: ResourceBundle)
-returnToMenu()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>150</x>
      <y>90</y>
      <w>150</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Launcher
{extends Application}
--
_-mediaPlayer: MediaPlayer_
--
+main(args: String[])
+start(primaryStage: Stage)
-startMusic()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>870</y>
      <w>190</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Bubble
--
-counter: int
-firedRight: boolean
-ableToCatch: boolean
-isPrisonBubble: boolean
-levelController: LevelController
--
+Bubble(x: double, y: double, 
    r: double, dx: double, dy: double, 
    dr: double, firedRight: boolean, 
    levelController: LevelController)
+move()
+checkPop(): Boolean
-moveVertically()
-moveHorizontally()
...</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>850</y>
      <w>230</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>/GravityObject/
--
_-GRAVITY-CONSTANT: float_
-levelController: LevelController
--
+GravityObject(imageLoc: String, x: double, 
    y: double, r: double, dx: double, 
    dy: double, dr: double, 
    levelController: LevelController)
+calculateGravity(): float
+moveCollisionChecker(jumping: Boolean, 
	ableToJump: Boolean): Boolean

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>610</x>
      <y>1150</y>
      <w>140</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Input
--
-scene: Scene
-keyboardBitSet: BitSet
...
--
+Input(scene: Scene)
+addListeners()
+removeListeners()
+isMoveUp() : boolean
+isMoveDown(): boolean
...
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>980</x>
      <y>580</y>
      <w>180</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Level
--
_#NUM_ROWS: int_
_#NUM_COLS: int_
_+SPRITE_SIZE: int_
-levelController: LevelController
-map: Integer[][]
-lvlTitle: String
-walls: ArrayList
-monsters: ArrayList
-players: ArrayList
--
+Level(lvlTitle: String, 
    levelController: LevelController)
+drawMap()
+readMap()
+update()
...
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1040</y>
      <w>260</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>Monster
--
-speed: double
-levelController: LevelController
-facingRight: boolean
-prisonBubble: Bubble
-caughtBubble: boolean
-dead: boolean
...
--
+Monster(imagePath: String, x: double, y: double, 
    r: double, dx: double, dy: double, dr: double, 
    speed: double, facingRight: boolean, 
    levelController: LevelController
+move()
+checkCollision(bubble: Bubble)
+die()
...
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>1040</y>
      <w>210</w>
      <h>430</h>
    </coordinates>
    <panel_attributes>Player
--
-jumping: boolean
-input: Input
-speed: double
-bubbles: Arraylist
-facingRight: boolean
-counter: int
-isDead: boolean
-gameOver: boolean
-levelController: LevelController
-ableToJump: boolean
-playerMinX: double
-playerMaxX: double
-playerMinY: double
-playerMaxY: double
isAbleToJump: boolean
...
--
+Player(x: double, y: double, 
    r: double, dx: double, dy: double, 
    dr: double, speed: double, input: Input, 
    levelController: LevelController
+processInput()
+move()
-applyGravity()
-causesBubbleCollision(x: double, x1: double,
	y: double, y1: double): boolean
+checkCollideMonster(monster: Monster)
+die()
+checkBubbles()
-moveVertical()
-moveHorizontal()
-moveRight()
-moveLeft()
-checkIfGameOver()
-checkFirePrimary()
...
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1100</x>
      <y>260</y>
      <w>210</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Settings
--
_+SCENE_WIDTH: double_
_+SCENE_HEIGHT: double_
_+PLAYER_SPEED: double_
_+PLAYER_HEALTH: double_
_+MONSTER_SPEED: double_
_+BUBBLE_INIT_SPEED: double_
_+BUBBLE_FLY_SPEED: double_
_+BUBBLE_FLY_TIME: double_
_+JUMPS_SPEED: double_
_+JUMP_SPEED_WALKER: double_
_+JUMP_HEIGHT_WALKER: double_
_+AMOUNT_MAPS: int_
...
--
-Settings()

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>540</y>
      <w>220</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>/SpriteBase/
--
-imagePath: String
-x: double
-y: double
-r: double
-dx: double
-dy: double
-dr: double
-w: double
-h: double
-canMove: boolean
-spriteChanged: boolean
--
+SpriteBase(imagePath: String, x: double, 
    y: double, r: double, dx: double, 
    dy: double, dr: double)
+move()
+causesCollision(minX: double, maxX: double,
	minY: double, maxY: double): Boolean
+checkBounds(spriteMinX: double, spriteMaxX: double,
	spriteMinY: double, spriteMaxY: double)
...     

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>1290</y>
      <w>220</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Walker
--
-levelController: LevelController
-jumping: boolean
-ableToJump: boolean
-jumpCounter: int
-walkerMinX: double
-walkerMaxX: double
-walkerMinY: double
-walkerMaxY: double
_-JUMP_THRESHOLD: int_
--
+Walker(x: double, y: double, r: double, 
    dx: double, dy: double, dr: double, 
    speed: double, facingRight: boolean, 
    levelController: LevelController
+move()
-moveVertical()
-moveHorizontal()
+switchDirection()    
-randInt(): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>850</x>
      <y>870</y>
      <w>140</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Wall
--
--
+Wall(x: double, y: double,
    r: double, dx: double, 
    dy: double, dr: double)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>790</y>
      <w>360</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>340.0;10.0;340.0;30.0;10.0;30.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>790</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>110</x>
      <y>970</y>
      <w>260</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>240.0;10.0;240.0;40.0;10.0;40.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>340</x>
      <y>970</y>
      <w>130</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;110.0;40.0;110.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>1240</y>
      <w>30</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>790</y>
      <w>260</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0;240.0;30.0;240.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>330</y>
      <w>70</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>50.0;250.0;50.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>290</x>
      <y>130</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>30</y>
      <w>190</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>MainController
{implements Initializable}
--
-players: ArrayList
-startMessage: Text
-pauseMessage: Text
-pauseMessageSub: Text
-pauseVBox: VBox
-playfieldLayer: Pane
-screenController: ScreenController
--
+initialize(location: URL, 
    resources: ResourceBundle)
-findMaps()
-createTimer(): AnimationTimer
+startLevel(gameLoop: AnimationLoop)
+createLvl()
+hideStartMessage()
+showWinScreen()
+showGameOverScreen()
+showPauseScreen()
+hidePauseScreen()
...
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>130</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>60.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>770</x>
      <y>170</y>
      <w>180</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;50.0;160.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>690</x>
      <y>280</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>940</x>
      <y>160</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>0</y>
      <w>520</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0;500.0;10.0;500.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>670</x>
      <y>500</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1100</x>
      <y>30</y>
      <w>210</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Logger
--
_-logFile: OutputStream_
_-timestamp: String_
_+OUT: PrintStream_
_+ERR: PrintStream_
_-INFO: boolean_
_-ERROR: boolean_
--
#Logger()
_-timeStamp(): String_
_+setLogFile(fileName: String)_
_+setTimeStamp(format: String)_
_+getLogFile(): OutputStream_
_+log(msg: String)_
_+log(msg: String, mode: boolean)_
_+log(ps: PrintStream, msg: String)_
_+log(stream: OutputStream, msg: String)_
_+logToFile(msg: String)_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>1190</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
